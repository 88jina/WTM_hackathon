{"ast":null,"code":"import _classCallCheck from\"/Users/jam/Desktop/blackgreen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jam/Desktop/blackgreen/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jam/Desktop/blackgreen/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jam/Desktop/blackgreen/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from'react';// import axios from 'axios';\nimport Brand from'../components/Brand';import\"./BrandList.css\";var BrandList=/*#__PURE__*/function(_Component){_inherits(BrandList,_Component);var _super=_createSuper(BrandList);function BrandList(){var _this;_classCallCheck(this,BrandList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLodaing:true,brandList:[]};return _this;}_createClass(BrandList,[{key:\"componentDidMount\",// getData= async () => {\n//   try {\n//     const result = await axios.get('dummy.json');\n//     this.setState({ brandList:result, isLoading: false });\n//     console.log('data :'+ result);\n//   }\n//   catch (error) {\n//     console.log(error);\n//   }\n// }\nvalue:function componentDidMount(){// this.getData();\nfetch('dummy.json').then(function(result){return result.json();}).then(function(result){console.log(\"result :\",result);this.setState({isLoading:false,brandList:result});}.bind(this));}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,brandList=_this$state.brandList;return/*#__PURE__*/_jsx(\"section\",{className:\"container\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loader\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loader__text\",children:\"Loading...\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"brand__list\",children:brandList.map(function(result){return/*#__PURE__*/_jsx(Brand,{name:result.name,desc:result.desc,homepage:result.hompage,image:result.image},result.id);})})});}}]);return BrandList;}(Component);export default BrandList;","map":{"version":3,"sources":["/Users/jam/Desktop/blackgreen/src/routes/BrandList.js"],"names":["React","Component","Brand","BrandList","state","isLodaing","brandList","fetch","then","result","json","console","log","setState","isLoading","bind","map","name","desc","hompage","image","id"],"mappings":"2dAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAgC,OAAhC,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAO,iBAAP,C,GAEMC,CAAAA,S,uUACJC,K,CAAQ,CACNC,SAAS,CAAE,IADL,CAENC,SAAS,CAAC,EAFJ,C,gEAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kCACoB,CAClB;AACAC,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQ,SAAUC,MAAV,CAAkB,CACtB,MAAOA,CAAAA,MAAM,CAACC,IAAP,EAAP,CACD,CAHH,EAIGF,IAJH,CAIQ,SAAUC,MAAV,CAAkB,CACtBE,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,MAAxB,EACA,KAAKI,QAAL,CAAc,CAAEC,SAAS,CAAE,KAAb,CAAoBR,SAAS,CAACG,MAA9B,CAAd,EACD,CAHK,CAGJM,IAHI,CAGC,IAHD,CAJR,EAQD,C,uCACQ,iBAC0B,KAAKX,KAD/B,CACCU,SADD,aACCA,SADD,CACYR,SADZ,aACYA,SADZ,CAEP,mBACE,gBAAS,SAAS,CAAC,WAAnB,UACCQ,SAAS,cACR,YAAK,SAAS,CAAC,QAAf,uBACE,aAAM,SAAS,CAAC,cAAhB,wBADF,EADQ,cAKR,YAAK,SAAS,CAAC,aAAf,UACOR,SAAS,CAACU,GAAV,CAAc,SAAAP,MAAM,qBACnB,KAAC,KAAD,EAEE,IAAI,CAAEA,MAAM,CAACQ,IAFf,CAGE,IAAI,CAAER,MAAM,CAACS,IAHf,CAIE,QAAQ,CAAET,MAAM,CAACU,OAJnB,CAKE,KAAK,CAAEV,MAAM,CAACW,KALhB,EACOX,MAAM,CAACY,EADd,CADmB,EAApB,CADP,EANF,EADF,CAqBD,C,uBAjDqBpB,S,EAoDxB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component }from 'react';\n// import axios from 'axios';\nimport Brand from '../components/Brand';\nimport \"./BrandList.css\";\n\nclass BrandList extends Component{\n  state = {\n    isLodaing: true,\n    brandList:[]\n    }\n  // getData= async () => {\n  //   try {\n  //     const result = await axios.get('dummy.json');\n  //     this.setState({ brandList:result, isLoading: false });\n  //     console.log('data :'+ result);\n  //   }\n  //   catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  componentDidMount() {\n    // this.getData();\n    fetch('dummy.json')\n      .then(function (result) {\n        return result.json();\n      })\n      .then(function (result) {\n        console.log(\"result :\", result);\n        this.setState({ isLoading: false, brandList:result});\n      }.bind(this));\n  }\n  render() {\n    const { isLoading, brandList } = this.state;\n    return (\n      <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"brand__list\">\n              {brandList.map(result => (\n                <Brand\n                  key={result.id}\n                  name={result.name}\n                  desc={result.desc}\n                  homepage={result.hompage}\n                  image={result.image}\n                />\n              ))}\n        </div>\n        )}\n    </section>\n    );\n  }\n} \n\nexport default BrandList;\n"]},"metadata":{},"sourceType":"module"}